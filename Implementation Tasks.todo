CS 198/199 Implementation Tasks

Application:
  CS 199:
    ☐ QR Code Method
      * Scanning QR codes instead of images solves the issue of unreliability thanks to varying lighting conditions
      * This is also a good solution for relocalization by placing QR codes in the areas covered by the application

      ☐ QR Code Scanner
        ✔ Basic QR scanning functionality @done (18-12-06 16:36)
        ✔ Set minimum distance to QR code (arm's length) @done (18-12-07 14:29)
        ✔ Detect codes that do not exist in the database, and display informative message @high @done (19-02-09 17:25)
          * Prevents application from crashing when fed irrelevant QR codes
          * ? Use RegEx for determining if code data matches expected those of expected input
        ✔ Keep QR code in center of screen @low @done (19-02-22 16:14)
          * This is to keep the user at the desired distance from the QR code image
          * UIKit -> CGRect -> contains(_ rect2 : CGRect)
        ✔ Write an under-the-hood scanner for when in the navigation view (tied with a Navigation View task) @done (19-03-13 19:33)
      ☐ Print QR codes for testing
      ✔ Add Boolean variable for determining whether this is the first scan or not and @REMOVED
        * To prevent switching views to location list upon relocalization
        * This has been added but is not in use yet
        > Adding an under-the-hood scanner for Nav view is more convenient and checks this off
      ✔ Move list setting and texture changing logic to launchNavigator() @low @done (19-02-09 17:26)

    ✔ SQLite Database @done (19-03-05 14:55)
     _Stores:_
      * QR code information
      * Location information
        * Building
          * Floor
          * Relative altitude range, with 0.0 as lowest relevant floor
          * Corresponding image
          * <?> User rotation offset
          * Rooms
            * Scene coordinates of location pin marker
      ✔ Design the schema @done (19-03-05 14:55)
      ✔ Create a Swift class for static query functions to the DB @done (18-12-13 19:11)
      ✔ Readjust floor levels; 1 is the starting level for all @done (19-02-09 17:26)

    ☐ Navigation View
      * Change plane size and material depending on most recently scanned location + relative altitude reading
      ☐ Program scene adjustments
        ✔ Translation of location and user markers @done (19-03-13 19:34)
          ✔ Location pin marker @done (18-12-14 18:07)
          ✔ User marker @done (19-02-22 19:06)
            * Translation on initial scan works. Do relocalization next.
        ✔ Change texture of plane based on relative altitude (Building.delta) @done (19-02-09 17:26)
          * Maybe use UIImage array; [UIImage]
          * Consider keeping altimeter running in the background, checking if delta has been passed in this controller's viewWillAppear()
        ✔ Resize plan for different maps @high @done (19-03-27 14:52)
          * Store ratio in DB or calculate resolution
        ☐ Current floor and target floor labels/messages
          * > Partly done. Make friendlier
          * e.g. "You are currently on the nth floor" "[Room selected] is on the mth floor"
        ✔ Success message when user marker is within radius of loc. pin marker @done (19-02-09 17:35)
        ✔ Scan QR codes under the hood for relocalization @done (19-03-13 19:34)
          > Perhaps keep scanner in QR controller on but add a shared Boolean variable for checking which view the app is showing. When in Nav View, successful scans don't bring up a prompt ("Press Confirm to navigate!")
          > BETTER OPTION? : Add a hidden subview to the navigation scene view that is shown when "Recalibrate" is pressed. After scan (of either outcome) display a UIAlert (style: .alert) and proceed accordingly
        * REMOVED : ☐ Only allow camera panning up to plane bounds @low
        ☐ Make location pin marker and message bubbles rotate against camera @low
      ☐ Refine filter and movement vector calculation
        ✔ * Create a Filter class, with mirror, low-pass, and high-pass options @done (18-12-16 17:52)
      ✔ Replace ARKit with SceneKit @done (18-12-13 19:11)
      ✔ Add a "Show Destination" button @done (19-03-22 19:35)
      ☐ Use SpriteKit instead of SceneKit @low
      ✔ Allow map panning when detecting motion from single point of contact on screen (use UIPanGestureRecognizer) @done (19-03-22 19:35)
      ✔ Bind camera to user marker @done (19-03-22 19:35)
      ✔ Allow rotation of camera to simulate rotation of world around user (switch between this and default view) @done (19-03-22 19:35)
      ✔ Add bubbles ("You are here" and "This is your target") @high @done (19-03-27 15:55)
      ☐ Add labels (current floor and destination floor) @high
      ☐ Fix logic in Utilities.ordinalize to accomodate hasLGF truth value

    ☐ Indoor Location List View
      ✔ Build query function for acquiring the list @done (18-12-14 18:07)
      ✔ Bind table cells to rows in the database @done (18-12-13 19:12)
      ✔ Don't restrict location list to current floor @done (19-02-09 17:31)
        * Show all. Still display marker but use messages in nav view to inform the user of current floor and target's floor
      ✔ Subheader for each floor @low @done (19-02-09 17:31)
        * numberOfSections
      ✔ Navigation bar + title @low @done (19-02-22 19:06)
        * Embed table view controller in navigation view controller
      ✔ Table cell subtitles @low @done (19-02-09 17:31)
        * set cell type to 'subtitle' in Interface Builder
      ✔ use indexPath.section along with indexPath.row to fix some issues @done (19-02-09 17:31)

    ☐ Miscellaneous
      ☐ Consider variable fixed-length movement; n velocity bins depending on current velocity
      ☐ Add images of room facades to app @high
      ☐ Add Credits screen (UIAlertController); include GRDB, MarqueeLabel, and Simon Ng (AppCoda)
      ☐ Transfer scaling of nodes in NavigationScene.scn to respective .scn files; set to 1.00 in former
      ☐ Produce builds for Testflight
      ☐ Other tasks (enumerate when fleshed out)
      ✔ Create a struct / class for variables / objects shared between controllers @done (19-02-09 17:31)
      ✔ Create icon assets for tab bar @low @done (19-03-12 11:37)

    Issues:
      ✔ Fix "Error: Failed to load <image>" @high @done (18-12-14 12:42) -- tanga lang si Xcode di makita yung folder
        

  CS 199 Nice-to-haves:
    ☐ Outdoor Nav Subfunction
      ☐ Integrate into app using MapKit
Paper:
  ☐ Write the paper, bois
    ☐ Include diagram for data flow / high-level concept ?
